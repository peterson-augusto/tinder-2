[{"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\index.js":"1","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\App.js":"2","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Dashboard.js":"3","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\OnBoarding.js":"4","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Home.js":"5","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Nav.js":"6","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatContainer.js":"7","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\AuthModal.js":"8","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatHeader.js":"9","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\MatchesDisplay.js":"10","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatDisplay.js":"11","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatInput.js":"12","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Chat.js":"13"},{"size":254,"mtime":1670254050154,"results":"14","hashOfConfig":"15"},{"size":658,"mtime":1670261622259,"results":"16","hashOfConfig":"15"},{"size":3600,"mtime":1670265957413,"results":"17","hashOfConfig":"15"},{"size":8556,"mtime":1670244621907,"results":"18","hashOfConfig":"15"},{"size":1466,"mtime":1670289398971,"results":"19","hashOfConfig":"15"},{"size":898,"mtime":1669901171181,"results":"20","hashOfConfig":"15"},{"size":828,"mtime":1669859126353,"results":"21","hashOfConfig":"15"},{"size":2956,"mtime":1670261708985,"results":"22","hashOfConfig":"15"},{"size":763,"mtime":1669859072952,"results":"23","hashOfConfig":"15"},{"size":1301,"mtime":1669913067604,"results":"24","hashOfConfig":"15"},{"size":2415,"mtime":1669858253571,"results":"25","hashOfConfig":"15"},{"size":1070,"mtime":1669903183530,"results":"26","hashOfConfig":"15"},{"size":725,"mtime":1669773072128,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"ykhjob",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\index.js",[],[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\App.js",["74","75"],[],"import Home from './pages/Home'\nimport Dashboard from './pages/Dashboard'\nimport OnBoarding from './pages/OnBoarding'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\n\nconst App = () => {\n  const [cookies, setCookie, removeCookie] = useCookies(['user'])\n\n  const authToken = cookies.AuthToken\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        {authToken && <Route path=\"/dashboard\" element={<Dashboard />} />}\n        {authToken && <Route path=\"/onboarding\" element={<OnBoarding />} />}\n\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Dashboard.js",["76","77","78","79"],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\OnBoarding.js",["80","81"],[],"import Nav from '../components/Nav'\r\nimport { useState } from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst OnBoarding = () => {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\r\n    const [formData, setFormData] = useState({\r\n        user_id: cookies.UserId,\r\n        first_name: '',\r\n        dob_day: '',\r\n        dob_month: '',\r\n        dob_year: '',\r\n        show_gender: false,\r\n        gender_identity: \"man\",\r\n        gender_interest: \"woman\",\r\n        url: '',\r\n        about: '',\r\n        matches: []\r\n\r\n    })\r\n\r\n    let navigate = useNavigate()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const response = await axios.put('http://localhost:8000/user', { formData })\r\n            console.log(response)\r\n            const success = response.status === 200\r\n            if (success) navigate('/dashboard')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log('e', e)\r\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value\r\n        const name = e.target.name\r\n\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav\r\n                minimal={true}\r\n                setShowModal={() => {\r\n                }}\r\n                showModal={false}\r\n            />\r\n\r\n            <div className=\"onboarding\">\r\n                <h2>CRIAR CONTA</h2>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <section>\r\n                        <label htmlFor=\"first_name\">Primeiro Nome</label>\r\n                        <input\r\n                            id=\"first_name\"\r\n                            type='text'\r\n                            name=\"first_name\"\r\n                            placeholder=\"Primeiro Nome\"\r\n                            required={true}\r\n                            value={formData.first_name}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <label>Aniversário</label>\r\n                        <div className=\"multiple-input-container\">\r\n                            <input\r\n                                id=\"dob_day\"\r\n                                type=\"number\"\r\n                                name=\"dob_day\"\r\n                                placeholder=\"DD\"\r\n                                required={true}\r\n                                value={formData.dob_day}\r\n                                onChange={handleChange}\r\n                            />\r\n\r\n                            <input\r\n                                id=\"dob_month\"\r\n                                type=\"number\"\r\n                                name=\"dob_month\"\r\n                                placeholder=\"MM\"\r\n                                required={true}\r\n                                value={formData.dob_month}\r\n                                onChange={handleChange}\r\n                            />\r\n\r\n                            <input\r\n                                id=\"dob_year\"\r\n                                type=\"number\"\r\n                                name=\"dob_year\"\r\n                                placeholder=\"YYYY\"\r\n                                required={true}\r\n                                value={formData.dob_year}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <label>Gênero</label>\r\n                        <div className=\"multiple-input-container\">\r\n                            <input\r\n                                id=\"man-gender-identity\"\r\n                                type=\"radio\"\r\n                                name=\"gender_identity\"\r\n                                value=\"man\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_identity === \"man\"}\r\n                            />\r\n                            <label htmlFor=\"man-gender-identity\">Homem</label>\r\n                            <input\r\n                                id=\"woman-gender-identity\"\r\n                                type=\"radio\"\r\n                                name=\"gender_identity\"\r\n                                value=\"woman\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_identity === \"woman\"}\r\n                            />\r\n                            <label htmlFor=\"woman-gender-identity\">Mulher</label>\r\n                            <input\r\n                                id=\"more-gender-identity\"\r\n                                type=\"radio\"\r\n                                name=\"gender_identity\"\r\n                                value=\"more\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_identity === \"more\"}\r\n                            />\r\n                            <label htmlFor=\"more-gender-identity\">Mais</label>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"show-gender\">Mostrar gênero no meu perfil</label>\r\n\r\n                        <input\r\n                            id=\"show-gender\"\r\n                            type=\"checkbox\"\r\n                            name=\"show_gender\"\r\n                            onChange={handleChange}\r\n                            checked={formData.show_gender}\r\n                        />\r\n\r\n                        <label>Mostre-me</label>\r\n\r\n                        <div className=\"multiple-input-container\">\r\n                            <input\r\n                                id=\"man-gender-interest\"\r\n                                type=\"radio\"\r\n                                name=\"gender_interest\"\r\n                                value=\"man\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_interest === \"man\"}\r\n                            />\r\n                            <label htmlFor=\"man-gender-interest\">Homem</label>\r\n                            <input\r\n                                id=\"woman-gender-interest\"\r\n                                type=\"radio\"\r\n                                name=\"gender_interest\"\r\n                                value=\"woman\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_interest === \"woman\"}\r\n                            />\r\n                            <label htmlFor=\"woman-gender-interest\">Mulher</label>\r\n                            <input\r\n                                id=\"everyone-gender-interest\"\r\n                                type=\"radio\"\r\n                                name=\"gender_interest\"\r\n                                value=\"everyone\"\r\n                                onChange={handleChange}\r\n                                checked={formData.gender_interest === \"everyone\"}\r\n                            />\r\n                            <label htmlFor=\"everyone-gender-interest\">Todos</label>\r\n\r\n                        </div>\r\n\r\n                        <label htmlFor=\"about\">Sobre mim</label>\r\n                        <input\r\n                            id=\"about\"\r\n                            type=\"text\"\r\n                            name=\"about\"\r\n                            required={true}\r\n                            placeholder=\"Eu gosto de viajar...\"\r\n                            value={formData.about}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <input type=\"submit\" />\r\n                    </section>\r\n\r\n                    <section>\r\n\r\n                        <label htmlFor=\"url\">Foto de perfil</label>\r\n                        <input\r\n                            type=\"url\"\r\n                            name=\"url\"\r\n                            id=\"url\"\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                        />\r\n                        <div className=\"photo-container\">\r\n                            {formData.url && <img src={formData.url} alt=\"foto de perfil\" />}\r\n                        </div>\r\n\r\n\r\n                    </section>\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default OnBoarding","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Home.js",["82"],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Nav.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatContainer.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\AuthModal.js",["83","84"],[],"import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useCookies } from 'react-cookie'\r\n\r\n\r\nconst AuthModal = ({ setShowModal, isSignUp }) => {\r\n    const [email, setEmail] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [confirmPassword, setConfirmPassword] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [cookies, setCookie, removeCookie] = useCookies(null)\r\n\r\n    let navigate = useNavigate()\r\n\r\n\r\n    const handleClick = () => {\r\n        setShowModal(false)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            if (isSignUp && (password !== confirmPassword)) {\r\n                setError('As senhas precisam ser iguais!')\r\n                return\r\n            }\r\n\r\n            const response = await axios.post(`http://localhost:8000/${isSignUp ? 'signup' : 'login'}`, { email, password })\r\n\r\n            setCookie('AuthToken', response.data.token)\r\n            setCookie('UserId', response.data.userId)\r\n\r\n            const success = response.status === 201\r\n            if (success && isSignUp) navigate('/onboarding')\r\n            if (success && !isSignUp) navigate('/dashboard')\r\n\r\n            window.location.reload()\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-modal\">\r\n            <div className=\"close-icon\" onClick={handleClick}>ⓧ</div>\r\n\r\n            <h2>{isSignUp ? 'CRIAR UMA CONTA' : 'ENTRAR'}</h2>\r\n            <p>Ao clicar em Entre, você concorda com os nossos Termos. Saiba como processamos seus dados em nossa Política de Privacidade e Política de Cookies.</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required={true}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Senha\"\r\n                    required={true}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {isSignUp && <input\r\n                    type=\"password\"\r\n                    id=\"password-check\"\r\n                    name=\"password-check\"\r\n                    placeholder=\"Confirme sua senha\"\r\n                    required={true}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />}\r\n                <input className=\"secondary-button\" type=\"submit\" />\r\n                <p>{error}</p>\r\n            </form>\r\n\r\n            <hr />\r\n            <h2>BAIXE O APLICATIVO!</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AuthModal","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatHeader.js",["85"],[],"import { useCookies } from 'react-cookie'\r\n\r\nconst ChatHeader = ({ user }) => {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\r\n\r\n    const logout = () => {\r\n        removeCookie('UserId', cookies.UserId)\r\n        removeCookie('AuthToken', cookies.AuthToken)\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container-header\">\r\n            <div className=\"profile\">\r\n                <div className=\"img-container\">\r\n                    <img src={user.url} alt={\"photo of \" + user.first_name} />\r\n                </div>\r\n                <h3>{user.first_name}</h3>\r\n            </div>\r\n            <i className=\"log-out-icon\" onClick={logout}>⇦</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\MatchesDisplay.js",["86"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst MatchesDisplay = ({ matches, setClickedUser }) => {\r\n    const [matchedProfiles, setMatchedProfiles] = useState(null);\r\n\r\n    const matchedUserIds = matches.map(({ user_id }) => user_id);\r\n\r\n    const getMatches = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/users\", {\r\n                params: { userIds: JSON.stringify(matchedUserIds) }\r\n            });\r\n            setMatchedProfiles(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMatches();\r\n    }, [matches]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"matches-display\">\r\n            {matchedProfiles?.map((match) => (\r\n                <div\r\n                    key={match.user_id}\r\n                    className=\"match-card\"\r\n                    onClick={() => setClickedUser(match)}\r\n                >\r\n                    <div className=\"img-container\">\r\n                        <img src={match?.url} alt={match?.first_name + \" profile\"} />\r\n                    </div>\r\n                    <h3>{match?.first_name}</h3>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MatchesDisplay;","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatDisplay.js",["87"],[],"import Chat from './Chat'\r\nimport ChatInput from './ChatInput'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [usersMessages, setUsersMessages] = useState(null)\r\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\r\n\r\n    const getUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: userId, correspondingUserId: clickedUserId }\r\n            })\r\n            setUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getClickedUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: clickedUserId, correspondingUserId: userId }\r\n            })\r\n            setClickedUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsersMessages()\r\n        getClickedUsersMessages()\r\n    }, [])\r\n\r\n    const messages = []\r\n\r\n    usersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = user?.first_name\r\n        formattedMessage['img'] = user?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    clickedUsersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = clickedUser?.first_name\r\n        formattedMessage['img'] = clickedUser?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    const descendingOrderMessages = messages?.sort((a, b) => a.timestamp.localeCompare(b.timestamp))\r\n\r\n    return (\r\n        <>\r\n            <Chat descendingOrderMessages={descendingOrderMessages} />\r\n            <ChatInput\r\n                user={user}\r\n                clickedUser={clickedUser} getUserMessages={getUsersMessages} getClickedUsersMessages={getClickedUsersMessages} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatInput.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Chat.js",[],[],{"ruleId":"88","severity":1,"message":"89","line":8,"column":19,"nodeType":"90","messageId":"91","endLine":8,"endColumn":28},{"ruleId":"88","severity":1,"message":"92","line":8,"column":30,"nodeType":"90","messageId":"91","endLine":8,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":11,"column":21,"nodeType":"90","messageId":"91","endLine":11,"endColumn":30},{"ruleId":"88","severity":1,"message":"92","line":11,"column":32,"nodeType":"90","messageId":"91","endLine":11,"endColumn":44},{"ruleId":"93","severity":1,"message":"94","line":39,"column":8,"nodeType":"95","endLine":39,"endColumn":10,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":45,"column":8,"nodeType":"95","endLine":45,"endColumn":14,"suggestions":"98"},{"ruleId":"88","severity":1,"message":"89","line":8,"column":21,"nodeType":"90","messageId":"91","endLine":8,"endColumn":30},{"ruleId":"88","severity":1,"message":"92","line":8,"column":32,"nodeType":"90","messageId":"91","endLine":8,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":9,"column":21,"nodeType":"90","messageId":"91","endLine":9,"endColumn":30},{"ruleId":"88","severity":1,"message":"99","line":12,"column":12,"nodeType":"90","messageId":"91","endLine":12,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":12,"column":32,"nodeType":"90","messageId":"91","endLine":12,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":4,"column":21,"nodeType":"90","messageId":"91","endLine":4,"endColumn":30},{"ruleId":"93","severity":1,"message":"100","line":22,"column":8,"nodeType":"95","endLine":22,"endColumn":17,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"102","line":38,"column":8,"nodeType":"95","endLine":38,"endColumn":10,"suggestions":"103"},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'getGenderedUsers'. Either include it or remove the dependency array.",["105"],"'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMatches'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'getClickedUsersMessages' and 'getUsersMessages'. Either include them or remove the dependency array.",["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [getUser]",{"range":"116","text":"117"},"Update the dependencies array to be: [getGenderedUsers, user]",{"range":"118","text":"119"},"Update the dependencies array to be: [getMatches, matches]",{"range":"120","text":"121"},"Update the dependencies array to be: [getClickedUsersMessages, getUsersMessages]",{"range":"122","text":"123"},[1207,1209],"[getUser]",[1308,1314],"[getGenderedUsers, user]",[673,682],"[getMatches, matches]",[1241,1243],"[getClickedUsersMessages, getUsersMessages]"]