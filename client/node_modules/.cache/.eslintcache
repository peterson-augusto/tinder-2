[{"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\index.js":"1","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\App.js":"2","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Dashboard.js":"3","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\OnBoarding.js":"4","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Home.js":"5","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Nav.js":"6","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatContainer.js":"7","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\AuthModal.js":"8","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatHeader.js":"9","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\MatchesDisplay.js":"10","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatDisplay.js":"11","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatInput.js":"12","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Chat.js":"13"},{"size":254,"mtime":1669683817752,"results":"14","hashOfConfig":"15"},{"size":658,"mtime":1669920063921,"results":"16","hashOfConfig":"15"},{"size":3603,"mtime":1669996566341,"results":"17","hashOfConfig":"15"},{"size":8501,"mtime":1669996613008,"results":"18","hashOfConfig":"15"},{"size":1461,"mtime":1669996519121,"results":"19","hashOfConfig":"15"},{"size":898,"mtime":1669901171181,"results":"20","hashOfConfig":"15"},{"size":828,"mtime":1669859126353,"results":"21","hashOfConfig":"15"},{"size":2956,"mtime":1669924421216,"results":"22","hashOfConfig":"15"},{"size":763,"mtime":1669859072952,"results":"23","hashOfConfig":"15"},{"size":1301,"mtime":1669913067604,"results":"24","hashOfConfig":"15"},{"size":2415,"mtime":1669858253571,"results":"25","hashOfConfig":"15"},{"size":1070,"mtime":1669903183530,"results":"26","hashOfConfig":"15"},{"size":725,"mtime":1669773072128,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ykhjob",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\index.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\App.js",["73","74"],[],"import Home from './pages/Home'\nimport Dashboard from './pages/Dashboard'\nimport OnBoarding from './pages/OnBoarding'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\n\nconst App = () => {\n  const [cookies, setCookie, removeCookie] = useCookies(['user'])\n\n  const authToken = cookies.AuthToken\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        {authToken && <Route path=\"/dashboard\" element={<Dashboard />} />}\n        {authToken && <Route path=\"/onboarding\" element={<OnBoarding />} />}\n\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Dashboard.js",["75","76"],[],"import TinderCard from 'react-tinder-card'\r\nimport { useEffect, useState } from 'react'\r\nimport ChatContainer from '../components/ChatContainer'\r\nimport { useCookies } from 'react-cookie'\r\nimport axios from 'axios'\r\n\r\nconst Dashboard = () => {\r\n    const [user, setUser] = useState(null)\r\n    const [genderedUsers, setGenderedUsers] = useState(null)\r\n    const [lastDirection, setLastDirection] = useState()\r\n    const [cookies] = useCookies(['user'])\r\n\r\n    const userId = cookies.UserId\r\n\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/user', {\r\n                params: { userId }\r\n            })\r\n            setUser(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const getGenderedUsers = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/gendered-users', {\r\n                params: { gender: user?.gender_interest }\r\n            })\r\n            setGenderedUsers(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n        getGenderedUsers()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            getGenderedUsers()\r\n        }\r\n    }, [user])\r\n\r\n\r\n    const updateMatches = async (matchedUserId) => {\r\n        try {\r\n            await axios.put('http://localhost:8000/addmatch', {\r\n                userId,\r\n                matchedUserId\r\n            })\r\n            getUser()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const swiped = (direction, swipedUserId) => {\r\n        if (direction === 'right') {\r\n            updateMatches(swipedUserId)\r\n        }\r\n        setLastDirection(direction)\r\n    }\r\n\r\n    const outOfFrame = (name) => {\r\n        console.log(name + ' left the screen!')\r\n    }\r\n\r\n    const matchedUserIds = user?.matches.map(({ user_id }) => user_id).concat(userId)\r\n\r\n    const filteredGenderedUsers = genderedUsers?.filter(genderedUser => !matchedUserIds.includes(genderedUser.user_id))\r\n\r\n\r\n    console.log('filteredGenderedUsers ', filteredGenderedUsers)\r\n    return (\r\n        <>\r\n            {user &&\r\n                <div className=\"dashboard\">\r\n                    <ChatContainer user={user} />\r\n                    <div className=\"swipe-container\">\r\n                        <div className=\"card-container\">\r\n\r\n                            {filteredGenderedUsers?.map((genderedUser) =>\r\n                                <TinderCard\r\n                                    className=\"swipe\"\r\n                                    key={genderedUser.user_id}\r\n                                    onSwipe={(dir) => swiped(dir, genderedUser.user_id)}\r\n                                    onCardLeftScreen={() => outOfFrame(genderedUser.first_name)}>\r\n                                    <div\r\n                                        style={{ backgroundImage: \"url(\" + genderedUser.url + \")\" }}\r\n                                        className=\"card\">\r\n                                        <h3>{genderedUser.first_name}</h3>\r\n                                    </div>\r\n                                </TinderCard>\r\n                            )}\r\n                            <div className=\"swipe-info\">\r\n                                {lastDirection ? <p>You swiped {lastDirection}</p> : <p />}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard    ","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\OnBoarding.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\pages\\Home.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Nav.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatContainer.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\AuthModal.js",["77","78"],[],"import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useCookies } from 'react-cookie'\r\n\r\n\r\nconst AuthModal = ({ setShowModal, isSignUp }) => {\r\n    const [email, setEmail] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [confirmPassword, setConfirmPassword] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [cookies, setCookie, removeCookie] = useCookies(null)\r\n\r\n    let navigate = useNavigate()\r\n\r\n\r\n    const handleClick = () => {\r\n        setShowModal(false)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            if (isSignUp && (password !== confirmPassword)) {\r\n                setError('As senhas precisam ser iguais!')\r\n                return\r\n            }\r\n\r\n            const response = await axios.post(`http://localhost:8000/${isSignUp ? 'signup' : 'login'}`, { email, password })\r\n\r\n            setCookie('AuthToken', response.data.token)\r\n            setCookie('UserId', response.data.userId)\r\n\r\n            const success = response.status === 201\r\n            if (success && isSignUp) navigate('/onboarding')\r\n            if (success && !isSignUp) navigate('/dashboard')\r\n\r\n            window.location.reload()\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-modal\">\r\n            <div className=\"close-icon\" onClick={handleClick}>ⓧ</div>\r\n\r\n            <h2>{isSignUp ? 'CRIAR UMA CONTA' : 'ENTRAR'}</h2>\r\n            <p>Ao clicar em Entre, você concorda com os nossos Termos. Saiba como processamos seus dados em nossa Política de Privacidade e Política de Cookies.</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required={true}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Senha\"\r\n                    required={true}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {isSignUp && <input\r\n                    type=\"password\"\r\n                    id=\"password-check\"\r\n                    name=\"password-check\"\r\n                    placeholder=\"Confirme sua senha\"\r\n                    required={true}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />}\r\n                <input className=\"secondary-button\" type=\"submit\" />\r\n                <p>{error}</p>\r\n            </form>\r\n\r\n            <hr />\r\n            <h2>BAIXE O APLICATIVO!</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AuthModal","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatHeader.js",["79"],[],"import { useCookies } from 'react-cookie'\r\n\r\nconst ChatHeader = ({ user }) => {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\r\n\r\n    const logout = () => {\r\n        removeCookie('UserId', cookies.UserId)\r\n        removeCookie('AuthToken', cookies.AuthToken)\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container-header\">\r\n            <div className=\"profile\">\r\n                <div className=\"img-container\">\r\n                    <img src={user.url} alt={\"photo of \" + user.first_name} />\r\n                </div>\r\n                <h3>{user.first_name}</h3>\r\n            </div>\r\n            <i className=\"log-out-icon\" onClick={logout}>⇦</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\MatchesDisplay.js",["80"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst MatchesDisplay = ({ matches, setClickedUser }) => {\r\n    const [matchedProfiles, setMatchedProfiles] = useState(null);\r\n\r\n    const matchedUserIds = matches.map(({ user_id }) => user_id);\r\n\r\n    const getMatches = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/users\", {\r\n                params: { userIds: JSON.stringify(matchedUserIds) }\r\n            });\r\n            setMatchedProfiles(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMatches();\r\n    }, [matches]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"matches-display\">\r\n            {matchedProfiles?.map((match) => (\r\n                <div\r\n                    key={match.user_id}\r\n                    className=\"match-card\"\r\n                    onClick={() => setClickedUser(match)}\r\n                >\r\n                    <div className=\"img-container\">\r\n                        <img src={match?.url} alt={match?.first_name + \" profile\"} />\r\n                    </div>\r\n                    <h3>{match?.first_name}</h3>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MatchesDisplay;","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatDisplay.js",["81"],[],"import Chat from './Chat'\r\nimport ChatInput from './ChatInput'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [usersMessages, setUsersMessages] = useState(null)\r\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\r\n\r\n    const getUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: userId, correspondingUserId: clickedUserId }\r\n            })\r\n            setUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getClickedUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: clickedUserId, correspondingUserId: userId }\r\n            })\r\n            setClickedUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsersMessages()\r\n        getClickedUsersMessages()\r\n    }, [])\r\n\r\n    const messages = []\r\n\r\n    usersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = user?.first_name\r\n        formattedMessage['img'] = user?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    clickedUsersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = clickedUser?.first_name\r\n        formattedMessage['img'] = clickedUser?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    const descendingOrderMessages = messages?.sort((a, b) => a.timestamp.localeCompare(b.timestamp))\r\n\r\n    return (\r\n        <>\r\n            <Chat descendingOrderMessages={descendingOrderMessages} />\r\n            <ChatInput\r\n                user={user}\r\n                clickedUser={clickedUser} getUserMessages={getUsersMessages} getClickedUsersMessages={getClickedUsersMessages} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay","C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\ChatInput.js",[],[],"C:\\Users\\peter\\OneDrive\\Área de Trabalho\\TRABALHO FT\\tinder-0\\client\\src\\components\\Chat.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":8,"column":19,"nodeType":"84","messageId":"85","endLine":8,"endColumn":28},{"ruleId":"82","severity":1,"message":"86","line":8,"column":30,"nodeType":"84","messageId":"85","endLine":8,"endColumn":42},{"ruleId":"87","severity":1,"message":"88","line":40,"column":8,"nodeType":"89","endLine":40,"endColumn":10,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":46,"column":8,"nodeType":"89","endLine":46,"endColumn":14,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"93","line":12,"column":12,"nodeType":"84","messageId":"85","endLine":12,"endColumn":19},{"ruleId":"82","severity":1,"message":"86","line":12,"column":32,"nodeType":"84","messageId":"85","endLine":12,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":4,"column":21,"nodeType":"84","messageId":"85","endLine":4,"endColumn":30},{"ruleId":"87","severity":1,"message":"94","line":22,"column":8,"nodeType":"89","endLine":22,"endColumn":17,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"96","line":38,"column":8,"nodeType":"89","endLine":38,"endColumn":10,"suggestions":"97"},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGenderedUsers' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'getGenderedUsers'. Either include it or remove the dependency array.",["99"],"'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMatches'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has missing dependencies: 'getClickedUsersMessages' and 'getUsersMessages'. Either include them or remove the dependency array.",["101"],{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [getGenderedUsers, getUser]",{"range":"110","text":"111"},"Update the dependencies array to be: [getGenderedUsers, user]",{"range":"112","text":"113"},"Update the dependencies array to be: [getMatches, matches]",{"range":"114","text":"115"},"Update the dependencies array to be: [getClickedUsersMessages, getUsersMessages]",{"range":"116","text":"117"},[1210,1212],"[getGenderedUsers, getUser]",[1311,1317],"[getGenderedUsers, user]",[673,682],"[getMatches, matches]",[1241,1243],"[getClickedUsersMessages, getUsersMessages]"]